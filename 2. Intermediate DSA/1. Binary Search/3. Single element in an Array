int singleNonDuplicate(vector<int>& arr)
{
	// Write your code here
	int n = arr.size();
	int lo = 1;
	int hi = n-2;

	if (n==1) 
		return arr[0];
	if (arr[0]!= arr[1]) 
		return arr[0];
	if (arr[n-2] != arr[n-1]) 
		return arr[n-1];

	while (lo<=hi) {
		int mid = (lo+hi)/2;

		if (arr[mid] != arr[mid+1] && arr[mid-1] != arr[mid] ){
			return arr[mid];
		}
		else if (mid % 2 == 0 && arr[mid] == arr[mid +1] || mid%2 ==1 && arr[mid-1] == arr[mid]){
			lo = mid + 1;
		}
		else {
			hi = mid - 1;
		}
	}
	return -1;
}
