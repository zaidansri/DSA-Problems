Node* detectloop (Node* head) {
    if (head == NULL) return head;

    Node* slow = head, *fast = head;

    while (slow!=NULL && fast != NULL){
        fast = fast->next;

        if (fast != NULL)
            fast = fast ->next;

        slow = slow -> next;
        
        if (slow == fast)
            return slow;
    }
    return NULL;
}

Node* startingpoint (Node *head) {
    if (head == NULL) return head;

    Node* intersection = detectloop(head);

    if (intersection == NULL) return intersection;
    Node *slow = head;

    while (intersection != slow) {
        slow = slow -> next;
        intersection = intersection -> next;
    }
    return slow;
}

Node* removeLoop (Node *head) {
    if (head == NULL) return head;
    
    Node* temp = startingpoint(head);
    Node* start = temp;
    if (temp == NULL) return head;

    while (temp -> next != start){
        temp = temp->next;
    }
    temp -> next = NULL;
    return head;
}
